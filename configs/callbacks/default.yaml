# Override with "none" to deactivate. 

log_code:
  _target_: lidar_multiclass.callbacks.comet_callbacks.LogCode
  code_dir: ${work_dir}/lidar_multiclass

log_logs_dir:
  _target_: lidar_multiclass.callbacks.comet_callbacks.LogLogsPath

lr_monitor:
  _target_:  pytorch_lightning.callbacks.LearningRateMonitor
  logging_interval: "step"
  log_momentum: true

log_iou_by_class:
  _target_: lidar_multiclass.callbacks.logging_callbacks.LogIoUByClass
  classification_dict: ${datamodule.dataset_description.classification_dict}

model_checkpoint:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: "val/loss_epoch" # name of the logged metric which determines when model is improving
  mode: "min" # can be "max" or "min"
  save_top_k: 1 # save k best models (determined by above metric)
  save_last: True # additionaly always save model from last epoch
  verbose: True
  dirpath: "checkpoints/"
  filename: "epoch_{epoch:03d}"
  auto_insert_metric_name: False

early_stopping:
  _target_: pytorch_lightning.callbacks.EarlyStopping
  monitor: "val/loss_epoch" # name of the logged metric which determines when model is improving
  mode: "min" # can be "max" or "min"
  patience: 6 # how many validation epochs of not improving until training stops
  min_delta: 0 # minimum change in the monitored metric needed to qualify as an improvement
  
